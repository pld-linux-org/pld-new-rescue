#!/bin/sh

. /variables.sh
. /functions.sh

echo "PLD New Rescue booting"

export PATH=/sbin:/bin:/usr/sbin:/usr/bin

mount -t proc proc /proc
mount -t sysfs sysfs /sys

c_init=/sbin/init

eval $(parse_cmdline $(cat /proc/cmdline))

if [ "$c_pldnr_debug" = "yes" ] ; then
    set -x
fi

if [ -n "$c_pldnr_modules" ] ; then
    modules="$(echo "$c_pldnr_modules" | tr "," " ")"
fi

# make some writable room on initramfs
root_size=$(grep "^rootfs.*size=" /etc/mtab | sed -e 's#.*size=\([0-9]\+\)k.*#\1#')
if [ -n "$root_size" ]; then
    mount / -o remount,size=$(( $root_size + 16384 ))k
fi

mkdir -p /root
mount -t tmpfs none /root

mv *.sqf /.rcd/modules 2>/dev/null

mkdir -p /root/dev /root/proc /root/sys
mount -t devtmpfs none /root/dev
mount --bind /root/dev /dev

for dir in tmp run ; do
        mkdir -p /root/$dir
	mount --bind /root/$dir /$dir
done

if [ "$c_pldnr_newifnames" = "yes" ] ; then
    rm -f /etc/udev/rules.d/80-net-setup-link.rules # udev>=209
    rm -f /etc/udev/rules.d/80-net-name-slot.rules # udev<=208
fi

modprobe loop
modprobe usb-storage

echo "Starting udevd"
mkdir -p /run/udev
udevd --daemon
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add

echo "Waiting for udev to setlle"
udevadm settle

modprobe squashfs
modprobe aufs

mount_media

mount_aufs

if [ -n "$c_ip" -a "$c_ip" != "off" -a "$c_ip" != "none" ] ; then
    setup_network
fi

for module in $modules ; do
    load_module "$module"
done

keymap=${c_pldnr_keymap:-$default_keymap}
if [ -n "$keymap" ] ; then
    echo "KEYMAP=$keymap" >> root/etc/vconsole.conf
fi
font=${c_pldnr_font:-$default_font}
if [ -n "$font" ] ; then
    echo "FONT=$font" >> root/etc/vconsole.conf
fi

if [ ! -x "/root/$c_init" ] ; then
    echo "Something went wrong, init binary ($c_init) not found under /root"
    echo "Kernel will panic, so dropping to shell"
    /bin/sh
fi

if [ -e "/custom" -a -d "/custom" ]; then
    cd /custom
    find * | cpio -p /root
    cd /
    rm -rf /custom
fi

for file in /custom*.sh; do 
    /bin/sh $file
done

umount_media

udevadm control --exit

for dir in tmp run dev ; do
    umount /$dir
done

rm -f /.rcd/modules/* 2>/dev/null

cat /fstab-add >> /root/etc/fstab
rm /fstab-add

# free some initramfs memory
finish_network
rm /_init.lst
rm /functions.sh
rm /variables.sh
rm /init
for file in /custom*.sh; do 
    rm $file
done

if [ "$c_pldnr_newifnames" = "yes" ] ; then
    rm -f /root/etc/udev/rules.d/80-net-setup-link.rules # udev>=209
    rm -f /root/etc/udev/rules.d/80-net-name-slot.rules # udev<=208
fi

cd /root
mount --move . /
exec chroot . "$c_init"

# vi: ft=sh sw=4 sts=4 et
